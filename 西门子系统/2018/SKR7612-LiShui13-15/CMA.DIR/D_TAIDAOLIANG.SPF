PROC D_TaiDaoLiang 
;;**********程序功能**********
;;新砂轮尖三角抬刀量计算
;;***************************
;;DEF REAL D1W,D1V,F1G,F1X,F1Y,G1J,G1X,G1Y
DEF	REAL   DR1,DR2,DR3,DR4,DR5,DR6,DR7,DR8
DEF REAL AM,AMX,AMY,HD,OFFSET
DEF REAL WHL_NB,WHR,DF
DEF REAL ANG_CURRENT,ANG_L,ANG_R,R_BOTTOM,ANG_BOTTOM,R_L,R_R
DEF REAL LRHIGHT_ERR,SUML,SUMR,PLWS,PRWS,LDRES_R,RDRES_R
DEF AXIS AX_W,AX_V

DEF REAL OFFSET2,DR181,DR270,DK1,ARCAM,WM,VM,WB1,VB1,WD1,VD1,WF1,VF1
DEF REAL WC1,VC1,WE1,VE1,DK2,WG1,VG1
DEF REAL TaiDao_R,TaiDao_L
;;;

ANG_L=TRI[9]
ANG_R=TRI[10]
R_BOTTOM=TRI[3]
R_L=TRI[11]
R_R=TRI[12]
WHL_NB=DRESSER[22]
LDRES_R=DRESSER[31]
RDRES_R=DRESSER[32]
SUML=WHEEL[10]
SUMR=WHEEL[11]
PLWS=DRESSER[33]
PRWS=DRESSER[34]
DF=DRESSER[10]
LRHIGHT_ERR=SUML-SUMR
;;;

AX_W=AXNAME(AXIS_HORI)
AX_V=AXNAME(AXIS_VER)


STOPRE
R_BOTTOM=TRI[3]+R_R
WHR=RDRES_R
ANG_CURRENT=ANG_R
ANG_BOTTOM=ANG_L+ANG_R
AM=WHR/SIN(ANG_BOTTOM/2)
AMX=AM*SIN(ANG_L/2-ANG_R/2)
AMY=-WHR+AM*COS(ANG_L/2-ANG_R/2)

BEGIN: DR1=WHR*COS(ANG_CURRENT)+TRI[0]*TAN(ANG_CURRENT)
DR2=-WHR-TRI[0]+WHR*SIN(ANG_CURRENT)

HD=(WHL_NB-TRI[0]*(TAN(ANG_L)+TAN(ANG_R)))/2
OFFSET=HD+TRI[0]*TAN(ANG_L)-WHL_NB/2

DR3=WHL_NB/2+OFFSET-DR1+1+WHR*SIN(TRI[15])
DR4=DR1+DR3
DR5=DR2-DR3*TAN(TRI[15])

DR6=WHL_NB/2-OFFSET-DR1+1+WHR*SIN(TRI[15])
DR7=DR1+DR6
END: DR8=DR2-DR6*TAN(TRI[15])
;;以上为尖三角的数据计算

;;带圆弧三角左部分
WHR=LDRES_R
R_BOTTOM=TRI[3]+R_L
ARCAM=R_BOTTOM/SIN(ANG_BOTTOM/2)
WM=-ARCAM*SIN((ANG_L-ANG_R)/2)
VM=-(WHR+R_BOTTOM)+ARCAM*COS((ANG_L-ANG_R)/2)
DR181=VM-(-WHR-TRI[0])
WB1=(WHR+R_BOTTOM)*COS(ANG_L)
VB1=(-1+SIN(ANG_L))*(WHR+R_BOTTOM)
WD1=WM+DR181*TAN(ANG_L)+WHR*COS(ANG_L)
VD1=VM-DR181+WHR*SIN(ANG_L)
DR270=(WHL_NB-DR181*(TAN(ANG_L)+TAN(ANG_R)))/2
OFFSET2=DR270+DR181*TAN(ANG_L)-WHL_NB/2+WM
DK1=WHL_NB/2+OFFSET2-WD1+1+WHR*SIN(TRI[15])
WF1=WD1+DK1
VF1=VD1-DK1*TAN(TRI[15])

;;带圆弧三角右部分
WHR=RDRES_R
R_BOTTOM=TRI[3]+R_R
ARCAM=R_BOTTOM/SIN(ANG_BOTTOM/2)
WM=-ARCAM*SIN((ANG_L-ANG_R)/2)
VM=-(WHR+R_BOTTOM)+ARCAM*COS((ANG_L-ANG_R)/2)
WC1=-(WHR+R_BOTTOM)*COS(ANG_R)
VC1=(-1+SIN(ANG_R))*(WHR+R_BOTTOM)
WE1=-(DR181*TAN(ANG_R)+WHR*COS(ANG_R)-WM)
VE1=VM-DR181+WHR*SIN(ANG_R)
DK2=WHL_NB/2-OFFSET2+WE1+1+WHR*SIN(TRI[15])
WG1=WE1-DK2
VG1=VE1-DK2*TAN(TRI[15])

TaiDao_R=-WHR-(DR8-WHR*COS(TRI[15]))-1*TAN(TRI[15])


R_BOTTOM=TRI[3]+R_L
WHR=LDRES_R
ANG_CURRENT=ANG_L
REPEAT BEGIN END
TaiDao_L=-WHR-(DR5-WHR*COS(TRI[15]))-1*TAN(TRI[15])

IF R_BOTTOM<>0
	TaiDao_L=-WHR-(VF1-WHR*COS(TRI[15]))-1*TAN(TRI[15])
	TaiDao_R=-WHR-(VG1-WHR*COS(TRI[15]))-1*TAN(TRI[15])
ENDIF


IF TaiDao_L>TaiDao_R
	TRI[14]=TaiDao_L
ELSE
	TRI[14]=TaiDao_R
ENDIF

RET

