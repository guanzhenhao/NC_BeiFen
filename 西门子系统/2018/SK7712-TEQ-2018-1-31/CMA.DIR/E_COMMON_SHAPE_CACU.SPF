PROC E_COMMON_SHAPE_CACU DISPLOF
;;**********程序功能**********
;;每段线角度以竖直向下的夹角考虑,右半边角度向右为正,左半边角度向左为正(角度范围为0-180)
;;根据不同齿形,可提前通过给的齿形参数计算各线段参数的关系及值
;;***************************

IF GRIND[0]<>1;不是内螺纹
    COMMON_MACHINE_STATUS=1
    COMMON_ANG_MODIFY=1
ELSE
    COMMON_MACHINE_STATUS=-1
    COMMON_ANG_MODIFY=0
ENDIF

EXECSTRING(WHICH_COMMON_SHAPE);调用指定的形状

E_COMMON_CROSS_STATUS(COMMON_ANG[1],COMMON_ANG[6],DRESSER[32],COMMON_STATUS_CACU[0],COMMON_LENGTH_ADD[0])

E_COMMON_SHAPE_STATUS(COMMON_ANG[1],COMMON_ANG[2],DRESSER[32],COMMON_STATUS_CACU[1],COMMON_LENGTH_ADD[1])
E_COMMON_SHAPE_STATUS(COMMON_ANG[2],COMMON_ANG[3],DRESSER[32],COMMON_STATUS_CACU[2],COMMON_LENGTH_ADD[2])
E_COMMON_SHAPE_STATUS(COMMON_ANG[3],COMMON_ANG[4],DRESSER[32],COMMON_STATUS_CACU[3],COMMON_LENGTH_ADD[3])
E_COMMON_SHAPE_STATUS(COMMON_ANG[4],COMMON_ANG[5],DRESSER[32],COMMON_STATUS_CACU[4],COMMON_LENGTH_ADD[4])

E_COMMON_SHAPE_STATUS(COMMON_ANG[6],COMMON_ANG[7],DRESSER[31],COMMON_STATUS_CACU[6],COMMON_LENGTH_ADD[6])
E_COMMON_SHAPE_STATUS(COMMON_ANG[7],COMMON_ANG[8],DRESSER[31],COMMON_STATUS_CACU[7],COMMON_LENGTH_ADD[7])
E_COMMON_SHAPE_STATUS(COMMON_ANG[8],COMMON_ANG[9],DRESSER[31],COMMON_STATUS_CACU[8],COMMON_LENGTH_ADD[8])
E_COMMON_SHAPE_STATUS(COMMON_ANG[9],COMMON_ANG[10],DRESSER[31],COMMON_STATUS_CACU[9],COMMON_LENGTH_ADD[9])

;RIGHT
COMMON_POINT_REF_HORI[1]=-(COMMON_LENGTH[1]+COMMON_STATUS_CACU[0]*COMMON_LENGTH_ADD[0]+COMMON_STATUS_CACU[1]*COMMON_LENGTH_ADD[1])*SIN(COMMON_ANG[1])
COMMON_POINT_REF_VER[1]=-COMMON_MACHINE_STATUS*(COMMON_LENGTH[1]+COMMON_STATUS_CACU[0]*COMMON_LENGTH_ADD[0]+COMMON_STATUS_CACU[1]*COMMON_LENGTH_ADD[1])*COS(COMMON_ANG[1])

COMMON_POINT_REF_HORI[2]=COMMON_POINT_REF_HORI[1]-(COMMON_LENGTH[2]+COMMON_STATUS_CACU[1]*COMMON_LENGTH_ADD[1]+COMMON_STATUS_CACU[2]*COMMON_LENGTH_ADD[2])*SIN(COMMON_ANG[2])
COMMON_POINT_REF_VER[2]=COMMON_POINT_REF_VER[1]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[2]+COMMON_STATUS_CACU[1]*COMMON_LENGTH_ADD[1]+COMMON_STATUS_CACU[2]*COMMON_LENGTH_ADD[2])*COS(COMMON_ANG[2])

COMMON_POINT_REF_HORI[3]=COMMON_POINT_REF_HORI[2]-(COMMON_LENGTH[3]+COMMON_STATUS_CACU[2]*COMMON_LENGTH_ADD[2]+COMMON_STATUS_CACU[3]*COMMON_LENGTH_ADD[3])*SIN(COMMON_ANG[3])
COMMON_POINT_REF_VER[3]=COMMON_POINT_REF_VER[2]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[3]+COMMON_STATUS_CACU[2]*COMMON_LENGTH_ADD[2]+COMMON_STATUS_CACU[3]*COMMON_LENGTH_ADD[3])*COS(COMMON_ANG[3])

COMMON_POINT_REF_HORI[4]=COMMON_POINT_REF_HORI[3]-(COMMON_LENGTH[4]+COMMON_STATUS_CACU[3]*COMMON_LENGTH_ADD[3]+COMMON_STATUS_CACU[4]*COMMON_LENGTH_ADD[4])*SIN(COMMON_ANG[4])
COMMON_POINT_REF_VER[4]=COMMON_POINT_REF_VER[3]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[4]+COMMON_STATUS_CACU[3]*COMMON_LENGTH_ADD[3]+COMMON_STATUS_CACU[4]*COMMON_LENGTH_ADD[4])*COS(COMMON_ANG[4])

COMMON_POINT_REF_HORI[5]=-DRESSER[22]/2-2
COMMON_POINT_REF_VER[5]=COMMON_POINT_REF_VER[4]-COMMON_MACHINE_STATUS*(COMMON_POINT_REF_HORI[4]-COMMON_POINT_REF_HORI[5])/TAN(COMMON_ANG[5])

;LEFT
COMMON_POINT_REF_HORI[6]=(COMMON_LENGTH[6]+COMMON_STATUS_CACU[0]*COMMON_LENGTH_ADD[0]+COMMON_STATUS_CACU[6]*COMMON_LENGTH_ADD[6])*SIN(COMMON_ANG[6])
COMMON_POINT_REF_VER[6]=-COMMON_MACHINE_STATUS*(COMMON_LENGTH[6]+COMMON_STATUS_CACU[0]*COMMON_LENGTH_ADD[0]+COMMON_STATUS_CACU[6]*COMMON_LENGTH_ADD[6])*COS(COMMON_ANG[6])

COMMON_POINT_REF_HORI[7]=COMMON_POINT_REF_HORI[6]+(COMMON_LENGTH[7]+COMMON_STATUS_CACU[6]*COMMON_LENGTH_ADD[6]+COMMON_STATUS_CACU[7]*COMMON_LENGTH_ADD[7])*SIN(COMMON_ANG[7])
COMMON_POINT_REF_VER[7]=COMMON_POINT_REF_VER[6]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[7]+COMMON_STATUS_CACU[6]*COMMON_LENGTH_ADD[6]+COMMON_STATUS_CACU[7]*COMMON_LENGTH_ADD[7])*COS(COMMON_ANG[7])

COMMON_POINT_REF_HORI[8]=COMMON_POINT_REF_HORI[7]+(COMMON_LENGTH[8]+COMMON_STATUS_CACU[7]*COMMON_LENGTH_ADD[7]+COMMON_STATUS_CACU[8]*COMMON_LENGTH_ADD[8])*SIN(COMMON_ANG[8])
COMMON_POINT_REF_VER[8]=COMMON_POINT_REF_VER[7]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[8]+COMMON_STATUS_CACU[7]*COMMON_LENGTH_ADD[7]+COMMON_STATUS_CACU[8]*COMMON_LENGTH_ADD[8])*COS(COMMON_ANG[8])

COMMON_POINT_REF_HORI[9]=COMMON_POINT_REF_HORI[8]+(COMMON_LENGTH[9]+COMMON_STATUS_CACU[8]*COMMON_LENGTH_ADD[8]+COMMON_STATUS_CACU[9]*COMMON_LENGTH_ADD[9])*SIN(COMMON_ANG[9])
COMMON_POINT_REF_VER[9]=COMMON_POINT_REF_VER[8]-COMMON_MACHINE_STATUS*(COMMON_LENGTH[9]+COMMON_STATUS_CACU[8]*COMMON_LENGTH_ADD[8]+COMMON_STATUS_CACU[9]*COMMON_LENGTH_ADD[9])*COS(COMMON_ANG[9])

COMMON_POINT_REF_HORI[10]=DRESSER[22]/2+2
COMMON_POINT_REF_VER[10]=COMMON_POINT_REF_VER[9]-COMMON_MACHINE_STATUS*(COMMON_POINT_REF_HORI[10]-COMMON_POINT_REF_HORI[9])/TAN(COMMON_ANG[10])

E_COMMON_BIGGEST_LOWEST(COMMON_POINT_REF_VER[1],COMMON_POINT_REF_VER[2],COMMON_POINT_REF_VER[3],COMMON_POINT_REF_VER[4],COMMON_POINT_REF_VER[5],COMMON_POINT_REF_VER[6],COMMON_POINT_REF_VER[7],COMMON_POINT_REF_VER[8],COMMON_POINT_REF_VER[9],COMMON_POINT_REF_VER[10],COMMON_VER_TOP,COMMON_VER_BOTTOM)
COMMON_VER_HEIGHT=ABS(COMMON_VER_TOP-COMMON_VER_BOTTOM)

RET

