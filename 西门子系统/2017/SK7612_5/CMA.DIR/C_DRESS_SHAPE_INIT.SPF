PROC C_DRESS_SHAPE_INIT SBLOF DISPLOF
;;**********程序功能**********
;;垂直位置计算:
;;各种修整器结构及齿形下的新砂轮抬刀计算，修整第一点计算，新砂轮轮廓修整次数计算
;;***************************

DEF REAL SHAPE_VER_REAL
DEF REAL SHAPE_VER_REAL_L
DEF REAL SHAPE_VER_REAL_R
DEF REAL SHAPE_VER_REAL_FIX

DEF REAL TRAP_TE1
DEF REAL TRAP_TE2


IF DRESSER[113]==0
    IF (DRESSER[0]==0)OR(DRESSER[0]==1)
        IF DRESSER[114]==0
            CASE DRESSER[4] OF 0 GOTOF VER_0 1 GOTOF VER_1 DEFAULT GOTOF VER_2

            VER_0:
            D_TaiDaoLiang
            SHAPE_VER_REAL_L=TRI[14]
            SHAPE_VER_REAL_R=TRI[14]
            GOTOF NEXT

            VER_1:
            TRAP_TE2=TRAP[8]/2-TRAP[1]*TAN(TRAP[12])-TRAP[1]*TAN(TRAP[11])
            TRAP_TE1=TRAP_TE2/(Tan(TRAP[12])+Tan(TRAP[11]))
            SHAPE_VER_REAL_L=(DRESSER[22]/2-TRAP[7] *TAN(45-TRAP[12]/2)-(TRAP_TE1+TRAP[0])*TAN(TRAP[12]))*TAN(30)+TRAP[0]+0.5
            SHAPE_VER_REAL_R=(DRESSER[22]/2-TRAP[6] *TAN(45-TRAP[11]/2)-(TRAP_TE1+TRAP[0])*TAN(TRAP[11]))*TAN(30)+TRAP[0]+0.5
            GOTOF NEXT

            VER_2:
            SHAPE_VER_REAL_L=(DARC[9]-DARC[14])+ABS(TAN(45)*((DRESSER[22]/2+DARC[12])-(DARC[9]+DRESSER[31])))
            SHAPE_VER_REAL_R=(DARC[10]-DARC[15])+ABS(TAN(45)*((DRESSER[22]/2+DARC[13])-(DARC[10]+DRESSER[32])))
            GOTOF NEXT

            
            NEXT:
            IF SHAPE_VER_REAL_L>=SHAPE_VER_REAL_R
                SHAPE_VER_REAL=SHAPE_VER_REAL_L
            ELSE
                SHAPE_VER_REAL=SHAPE_VER_REAL_R
            ENDIF
        ELSE
            E_COMMON_SHAPE_CACU
            SHAPE_VER_REAL=COMMON_VER_HEIGHT
        ENDIF
    ELSE
        SHAPE_VER_REAL=DRESSER[1]
    ENDIF
ELSE
    SHAPE_VER_REAL=0
ENDIF

IF DRESSER[5]==0
    IF DRESSER[11]<>0
        DRESSER[13]=ROUNDUP(SHAPE_VER_REAL/DRESSER[14])
        SHAPE_VER_REAL_FIX=DRESSER[13]*DRESSER[14]
    ELSE
        DRESSER[13]=ROUNDUP(SHAPE_VER_REAL/DRESSER[15])
        SHAPE_VER_REAL_FIX=DRESSER[13]*DRESSER[15]
    ENDIF
    IF GRIND[0]<>1
        WHEEL[10]=WHEEL[12]+SHAPE_VER_REAL_FIX
        WHEEL[11]=WHEEL[13]+SHAPE_VER_REAL_FIX
    ELSE
        IF DRESSER[37]==0
            WHEEL[10]=WHEEL[12]-SHAPE_VER_REAL_FIX
            WHEEL[11]=WHEEL[13]-SHAPE_VER_REAL_FIX
        ELSE
            WHEEL[10]=WHEEL[12]+SHAPE_VER_REAL_FIX
            WHEEL[11]=WHEEL[13]+SHAPE_VER_REAL_FIX
        ENDIF
    ENDIF
ELSE
    DRESSER[13]=0
    WHEEL[10]=WHEEL[10]
    WHEEL[11]=WHEEL[11]
ENDIF

RET

